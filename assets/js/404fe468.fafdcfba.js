(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[713],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(c,".").concat(u)]||m[u]||p[u]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2521:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return m}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],s={title:"StringsMatrix"},c=void 0,l={unversionedId:"Matrices/StringsMatrix",id:"Matrices/StringsMatrix",isDocsHomePage:!1,title:"StringsMatrix",description:"StringsMatrix is a two dimensional array or a matrix of 32-bit integers.",source:"@site/docs/03-Matrices/04-StringsMatrix.md",sourceDirName:"03-Matrices",slug:"/Matrices/StringsMatrix",permalink:"/arrays.wasm/Matrices/StringsMatrix",editUrl:"https://github.com/ArchitBhonsle/arrays.wasm/edit/master/docs/docs/03-Matrices/04-StringsMatrix.md",version:"current",sidebarPosition:4,frontMatter:{title:"StringsMatrix"},sidebar:"tutorialSidebar",previous:{title:"FloatsMatrix",permalink:"/arrays.wasm/Matrices/FloatsMatrix"}},d=[{value:"Constructors Methods",id:"constructors-methods",children:[]},{value:"Interop Methods",id:"interop-methods",children:[]},{value:"Utility Methods",id:"utility-methods",children:[]},{value:"Iteration Methods",id:"iteration-methods",children:[]}],p={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"StringsMatrix is a two dimensional array or a matrix of 32-bit integers."),(0,o.kt)("p",null,"The following scripts assume that you have imported the ",(0,o.kt)("inlineCode",{parentName:"p"},"StringsMatrix")," object\nfrom the package and set up the threads as explained in ",(0,o.kt)("a",{parentName:"p",href:"../"},"getting started"),"."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Each of these have a ",(0,o.kt)("inlineCode",{parentName:"p"},"R")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," variant. ",(0,o.kt)("inlineCode",{parentName:"p"},"R")," variant returns a StringsVector by\napplying the operation row-wise. ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," variant returns a StringsVector by applying\nthe operation on each column-wise."))),(0,o.kt)("h2",{id:"constructors-methods"},"Constructors Methods"),(0,o.kt)("p",null,"These methods are used to create new ",(0,o.kt)("inlineCode",{parentName:"p"},"StringsMatrix"),"s."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// Create a StringsMatrix from a given JavaScript array\nconst a = new StringsMatrix([["a", "b", "c"], ["d", "e", "f"]]);\nconsole.log(a.data); // [["a", "b", "c"], ["d", "e", "f"]]\n')),(0,o.kt)("h2",{id:"interop-methods"},"Interop Methods"),(0,o.kt)("p",null,"Some handy methods to work with the array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const a = new StringsMatrix([["a", "b", "c"], ["d", "e", "f"]]);\n\n// Both toJSON and data return a JavaScript array representation of the\n// StringsMatrix\nconsole.log(a.toJSON()); // [["a", "b", "c"], ["d", "e", "f"]]\nconsole.log(a.data); // [["a", "b", "c"], ["d", "e", "f"]]\n\n// This returns the data and metadata about the StringsMatrix\nconsole.log(a.toString());\n// [["a", "b", "c"],\n//  ["d", "e", "f"]], shape=[2, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2\n\n// It returns clone of the StringsMatrix\nconst b = a.clone();\nconsole.log(b.data); // [["a", "b", "c"], ["d", "e", "f"]]\n')),(0,o.kt)("h2",{id:"utility-methods"},"Utility Methods"),(0,o.kt)("p",null,"Basic getters and setters."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const x = new StringsMatrix([["a", "b", "c"], ["d", "e", "f"]]);\n\n// Get the number of rows in the StringsMatrix\nconsole.log(x.nrows()); // 2\n\n// Get the number of columns in the StringsMatrix\nconsole.log(x.ncols()); // 3\n\n// Get the shape of the StringsMatrix\nconsole.log(x.shape()); // [2, 3]\n\n// Set the given value at the specified index\nconsole.log(x.get([0, 1])); // b\n\n// Get the value at the specified index\nx.setR(1, new StringsVector(["g", "h", "i"]));\nconsole.log(x.data);\n// [["a", "b", "c"],\n//  ["g", "h", "i"]]\n\n// Swap the values at the specified indices\nx.swapC(0, 1);\nconsole.log(x.data);\n// [["b", "a", "c"],\n//  ["h", "g", "i"]]\n')),(0,o.kt)("p",null,"More complex methods used to manipulate the ",(0,o.kt)("inlineCode",{parentName:"p"},"StringsMatrix"),"."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'Each of these methods has two versions. The "pure" version returns the result of\nperforming the operation while the "impure" version actually changes the array.'),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"append  -> appended"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"extend  -> extended"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"insert  -> inserted"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"splice  -> spliced")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const a = new StringsMatrix([\n  ['a', 'b', 'c'],\n  ['d', 'e', 'f'],\n]);\nconst b = new StringsMatrix([\n  ['u', 'v', 'w'],\n  ['x', 'y', 'z'],\n]);\n\n// Append an element to the StringsVector\nconsole.log(a.appendedR(new StringsVector(['l', 'm', 'n'])).data);\n// [['a', 'b', 'c'],\n//  ['d', 'e', 'f'],\n//  ['l', 'm', 'n']]\n\n// Extend the StringsMatrix with another\nconsole.log(a.extendedC(b).data);\n// [['a', 'b', 'c', 'u', 'v', 'w'],\n//  ['d', 'e', 'f', 'x', 'y', 'z']]\n\n// Insert the given element at the specified index\nconsole.log(a.insertedR(1, new StringsVector(['l', 'm', 'n'])).data);\n// [['a', 'b', 'c'],\n//  ['l', 'm', 'n']]\n//  ['d', 'e', 'f'],\n\n// Removes an element from the specified index\nconst [spliced, column] = a.splicedC(1);\nconsole.log(spliced.data, column.data);\n// [['a', 'c'],\n//  ['d', 'f'],\n//\n// ['b', 'e']\n")),(0,o.kt)("h2",{id:"iteration-methods"},"Iteration Methods"),(0,o.kt)("p",null,"These methods allow you to perform element-wise operations on the matrix."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const a = new StringsMatrix([['a', 'b'], ['c', 'd']]);\n\nconst b = a.map(x => x + 'x');\nconsole.log(b.data); // [['ax', 'bx'], ['cx', 'dx']]\n\na.forEach(x => console.log(x));\n// a\n// b\n// c\n// d\n\na.transform(x => x + x);\nconsole.log(a.data); // [['aa', 'bb'], ['cc', 'dd']]\n")))}m.isMDXComponent=!0}}]);